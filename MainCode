/*
You are given a string s consisting of lowercase English letters ('a' to 'z').

Your task is to:

Find the vowel (one of 'a', 'e', 'i', 'o', or 'u') with the maximum frequency.
Find the consonant (all other letters excluding vowels) with the maximum frequency.
Return the sum of the two frequencies.

Note: If multiple vowels or consonants have the same maximum frequency, you may choose any one of them. If there are no vowels or no consonants in the string, consider their frequency as 0.

The frequency of a letter x is the number of times it occurs in the string.
 
Constraints:

1 <= s.length <= 100
s consists of lowercase English letters only.
*/

class Solution {
public:
    int maxFreqSum(string s) {
        //initialization of maps and final ints
        int vMax=0;
        int cMax=0;
        unordered_map<char,int> vowels;
        vowels['a'] = {0};
        vowels['e'] = {0};
        vowels['i'] = {0};
        vowels['o'] = {0};
        vowels['u'] = {0};

        unordered_map<char,int> cons;
        //starting while loop to traverse the given String s
        int i=0;
        while(i < s.length()){
            //this code is to itterate through the map to see if the letter is present if it is ++
            //if the letter is not found in vowels it will then check cons if is then ++
            if(vowels.find(s[i])!=vowels.end()){
                cout << vowels.at(s[i]) << endl;
                vowels.at(s[i]) = vowels.at(s[i]) +1;
            }
            else{
                if(cons.find(s[i])!=cons.end()){
                    cons.at(s[i]) = cons.at(s[i]) +1;
                }
                else{
                    cons[s[i]]={1};
                }
            }
            i++;
        }
        //this will itterate to find the biggest vowel and biggest const then add them in the return
        for(auto& [key, value]: vowels){
            if(vMax < value){
                vMax= value;
            }
        }
        for(auto& [key, value]: cons){
            if(cMax < value){
                cMax= value;
            }
        }
        return vMax+cMax;
    }
};






